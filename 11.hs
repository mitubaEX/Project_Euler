import Data.List.Split
import Data.List

calc :: [Integer] -> Integer
calc (a:b:c:d:[]) = a * b * c * d
calc otherwise = 0

right :: [String] -> Integer
right a = calc $ fmap read $ take 4 a

rightM :: [String] -> [Integer]
rightM xss@(x:xs) = right xss : rightM xs
rightM otherwise = []

diagonallyM :: [[String]] -> Int -> Integer
diagonallyM xs b = if length xs < 4 && length (xs !! b) < 4 then 0 else calc $ fmap read $ [head (xs !! b), head $ tail (xs !! (b + 1)), head $ tail $ tail (xs !! (b + 2)), head $ tail $ tail $ tail (xs !! (b + 3))]

diagonally :: [[String]] -> Int -> [Integer]
diagonally a b = loop a b
  where loop a b = if b < 17 then (diagonallyM a b) : (loop a $ b + 1) else []

dropDiagon :: [[String]] -> [Integer]
dropDiagon a = diagonally a 0 ++ dropDiagon (fmap (drop 1) a)

check :: [[String]] -> Int -> [Integer]
check a b = loop a b
  where loop a b = if b < 20 then (rightM $ a !! b) ++ (rightM $ (transpose a) !! b) ++ (loop a $ b + 1) else []

main = do
  let lis = fmap (splitOn " ") $ splitOn "," "08 02 22 97 38 15 00 40 00 75 04 05 07 78 52 12 50 77 91 08,49 49 99 40 17 81 18 57 60 87 17 40 98 43 69 48 04 56 62 00,81 49 31 73 55 79 14 29 93 71 40 67 53 88 30 03 49 13 36 65,52 70 95 23 04 60 11 42 69 24 68 56 01 32 56 71 37 02 36 91,22 31 16 71 51 67 63 89 41 92 36 54 22 40 40 28 66 33 13 80,24 47 32 60 99 03 45 02 44 75 33 53 78 36 84 20 35 17 12 50,32 98 81 28 64 23 67 10 26 38 40 67 59 54 70 66 18 38 64 70,67 26 20 68 02 62 12 20 95 63 94 39 63 08 40 91 66 49 94 21,24 55 58 05 66 73 99 26 97 17 78 78 96 83 14 88 34 89 63 72,21 36 23 09 75 00 76 44 20 45 35 14 00 61 33 97 34 31 33 95,78 17 53 28 22 75 31 67 15 94 03 80 04 62 16 14 09 53 56 92,16 39 05 42 96 35 31 47 55 58 88 24 00 17 54 24 36 29 85 57,86 56 00 48 35 71 89 07 05 44 44 37 44 60 21 58 51 54 17 58,19 80 81 68 05 94 47 69 28 73 92 13 86 52 17 77 04 89 55 40,04 52 08 83 97 35 99 16 07 97 57 32 16 26 26 79 33 27 98 66,88 36 68 87 57 62 20 72 03 46 33 67 46 55 12 32 63 93 53 69,04 42 16 73 38 25 39 11 24 94 72 18 08 46 29 32 40 62 76 36,20 69 36 41 72 30 23 88 34 62 99 69 82 67 59 85 74 04 36 16,20 73 35 29 78 31 90 01 74 31 49 71 48 86 81 16 23 57 05 54,01 70 54 71 83 51 54 69 16 92 33 48 61 43 52 01 89 19 67 48"
  -- print $ maximum $ (check lis 0) ++ (dropDiagon lis) ++ (dropDiagon $ fmap reverse lis)
  print $ maximum $ check lis 0
  --
  -- print $ dropDiagon lis
  -- print $ maximum [279496,16194745,5443200,1444352,5695272,235200,434304,2373140,1923264,85680,0,6023808,4788480,4904432,94464,3858624,685860,57816,1781787,32719995,4300800,55552,17085816,735000,298584,3400320,2804760,20400,0,21459816,2115840,18585216,1842048,3639384,2904000,1936836,109089,15358365,3809280,130816,0,562500,401940,4389504,7323540,42000,0,9580275,793440,11079648,2609568,1432981,8316000,880380,235773,1940004,23569920,310688,0,871875,616770,8969856,13679820,168000,15949128,2720325,8926200,8798544,1809864,1314797,415800,120600,205020,710424,17284608,743432,0,1220625,4728570,5125632,23451120,38500,20640048,32775,7079400,540270,1952748,3403004,196560,2864250,389940,143520,4051080,20444380,0,455700,1504545,160176,16080768,261800,15746016,9200,0,3313656,1808100,1636888,206388,726750,5849100,586560,3789720,12322640,531805,589372,1977402,212064,10606464,231880,23365056,11587200,4580064,6075036,5166000,13987952,255528,565250,261900,4301440,1684320,14916880,977835,627396,1599696,446688,5249664,382602,0,15642720,4258656,14035428,4797000,12259104,1788696,4522000,314280,6121280,497640,7124480,1393935,1613304,1599696,1982178,3499776,85425,4287360,20335536,2701728,12814956,11232000,0,275184,0,142560,26321504,530816,5958656,2230296,4724676,10969344,40304286,271360,45560,1774080,15466464,900576,11561319,9135360,0,74256,0,164736,7280416,503360,6229504,2046984,4188888,10253952,2414720,2713600,225120,3104640,9097920,350224,11561319,3654144,0,19992,0,1427712,992784,331760,3995008,2908872,6600672,641130,13522432,1356800,221760,5045040,14826240,640976,2415798,2248704,0,109956,0,1903616,858624,2169200,1997504,43416,597402,6044940,4829440,460800,14636160,7796880,6462720,97776,1380456,1194624,776736,907137,5076540,1730560,738816,3118225,3864736,244608,252747,2389860,2085440,705600,32565456,6713980,6343040,354438,898128,1742976,338256,4962573,5245758,133120,1619712,1077205,22464,61152,43956,5098368,3500560,1111320,12793572,5371184,13478960,430389,1496880,10675728,331992,17959788,11108664,25600,9043392,9172800,149760,63700,1025640,1507968,90014]
  --
  -- print $ dropDiagon $ fmap reverse lis
  -- print $ maximum $ [238576,0,2702700,361998,2407680,5331200,19911080,369117,4533408,7868280,1689120,2845953,5426190,14582400,16048824,482448,6574608,17728984,835016,95040,2744280,361998,2648448,10342528,3982216,421848,3651912,6377448,1450440,1597728,2993760,30987600,3890624,6992,51744,7792960,1131312,184800,3049200,389844,7283232,2585632,2287656,140616,1881288,2960958,204768,2725536,3211488,25612200,3817216,2304000,26880,5009760,4699296,739200,7669200,1398852,11883168,897056,1542240,235872,922896,5615610,174432,2051808,10229184,11842200,72864,1013760,524160,6032160,8001504,1075200,0,310856,0,1160896,3900960,419328,1179256,880880,3575856,2984448,9904448,6636448,327888,1119360,11706240,3313440,22289904,752640,0,81984,0,155584,8916480,1170624,365976,789360,3213744,4476672,34826064,4594464,156816,1492480,19649760,6461208,9287460,32256,0,257664,0,554268,5448960,4013568,2131272,1487640,8837796,268800,41076896,8013600,67716,2938320,8351148,8076510,16167060,233856,0,308352,0,1499784,8536704,4785408,2541132,2488416,416415,1574400,18442688,3931200,6433020,12955320,2141320,2053350,14114100,12180,8673280,539616,990564,818064,3374976,22132512,883872,1359288,7412187,78720,2752640,1404000,3097380,10755360,2141320,2474550,1266650,60030,1734656,1618848,294492,5537664,105468,22793184,1435500,21408786,19620495,131856,485760,3861000,7133360,8335404,706180,2823525,1700930,1980990,394240,1434888,73623,8743680,172584,0,1282380,738234,6355935,340628,385440,0,14079000,4630780,2949340,5898030,633325,2117610,224000,589680,23529,9694080,227520,2441880,2115927,508032,184230,548328,657000,0,14227200,1670900,737335,38140594,656355,16093836,576000,6570720,650969,0,403848,2570400,2042964,822528,10350,2467476,1839600,0,26265600,2582300,913415,70600674,6844845,9563004,1044000,6479460,1768425,1639440,717952,14871600,3714480,757248,5290,1951884,766500,0,27993600,666400,2003620,12692256,5242860,3380860,2818800,3298400,3654745,951280,890624,6444360,3049200,9086976,3910,1227798,588000,0,19408896,685440,1185240,9316656,10935108,3817100,24468444,1909600,5159640,553472,149]
